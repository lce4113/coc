1d153a9447445d8f2ffefba4988a8319|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|479|1|V|cpp
	tcT int sum(MS<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
500bb651e791638cdee0f6e2c5fd3aae|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|466|1|V|cpp
	
	// get the sum of values (plain integers, vectors, arrays, etc.)
	tcT int sum(T a) { rtn mod(a); }
	tcTUU int sum(T a, U... b) { rtn mod(sum(a) + sum(b)); }
	tcT int sum(V<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	tcTS int sum(A<T, S> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	tcT int sum(S<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	tcT int sum(MS<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	tcTU int sum(M<T,U> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x.s));
	  rtn res;
	}
fb4ddd15fb547fcea6f3e40dc79cf446|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|461|1|V|cpp
	// Sum {{{
	
	// get the sum of values (plain integers, vectors, arrays, etc.)
	
	tcT int sum(T a) { rtn mod(a); }
	
	tcTUU int sum(T a, U... b) { rtn mod(sum(a) + sum(b)); }
	
	tcT int sum(V<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTS int sum(A<T, S> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcT int sum(S<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcT int sum(MS<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTU int sum(M<T,U> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x.s));
	  rtn res;
	}
	
e329a16caf483ca1199ebef66d3ea558|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|464|1|V|cpp
	// Sum {{{
fe76712978e70147d63995563b156e10|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|464|1|V|cpp
	
	// get the sum of values (plain integers, vectors, arrays, etc.)
3bd1f68543c785628f73b1c1523cb068|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|465|19|v|cpp
	 rtn mod(a); 
670c16732b8747641940b8b7c8c98527|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|465|18|v|cpp
	{ rtn mod(a); }
dce7e88966e793ac36e01e9781c918ae|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|467|28|v|cpp
	{ rtn mod(sum(a) + sum(b)); }
b56d0a8d00f3e2197ba1e266bb4e1a29|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|469|21|v|cpp
	{
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
89aba044fccd130429cfb730ea2cbe32|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|477|24|v|cpp
	{
	  int res = 0;
	  each(a, x) res = mod(res + sum(x.s));
	  rtn res;
	}
4717a7351a67fa278547828eea06099a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|655|1|V|cpp
	  using F = T (*)(T, T);
076567cb32cffd87cbaddf103457ee91|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|653|1|V|cpp
	
	tcT struct ST {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n, ID = 0;
	  V<T> seg;
	
	  ST(V<T> a) { init(a); }
	  ST(V<T> a, T _ID) : ID(_ID) { init(a); }
	  ST(V<T> a, F _comb) : comb(_comb) { init(a); }
	  ST(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = sz(a);
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
	
72da54b0a8879782ef454d9ef9410e08|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|708|1|V|cpp
	  ST b(a, sum);
909bb6dfd74a6a15f93376a2cc2699b4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|699|1|V|cpp
	
	int cmp(int a, int b) { rtn a + b; }
df1f22a855414aea62a86af2b5bea745|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|622|3|V|cpp
	  a([&]() { out(1); });
5efc93a36ab30121b07c985d706f806a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|613|1|V|cpp
	
	template <typename F> void a(F b) { b(); }
a57fed77c60553836fd5ee092875c955|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q1/a.cpp|532|11|v|cpp
	INT_MIN
c42a000df1fd0f4432e6fb88582d1a01|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q1/a.cpp|627|3|V|cpp
	  out(max(a));
4c14655774564924b4a659cb969da534|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q1/a.cpp|628|12|v|cpp
	max(W) 
f639032a752f43c3087faf1f1276ae5e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q1/a.cpp|628|31|v|cpp
	max(a)) 
c401b4147eafc4e5787d8f18aa94a66a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q1/main.in|3|1|V|
	3 1 2
	3
	-7 -6 -6
	3
	2 2 2
	4
	17 3 5 -3
9f768c0bb1c3e84ca086a85211e978ac|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|627|9|v|cpp
	CONDITION
6091ef8cc9572a092983c0c2d8884830|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|641|1|V|cpp
	
	  out(K);
466c8c71a14fdbb8feb05d3d46573d9b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|3|1|V|
	6 3 4 2 1
27bf068f94b43481da0af8281ae2a768|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|4|1|V|
	4 2
	1 -4 0 -2
	5 1
	1 2 3 4 5
42561e83fef0ebc672a5761ee556d422|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|3|1|V|
	2 2 2
54d99d66f80795a1e9135b0b46e0f7b9|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|1|1|V|
	1
	3 1
e495a0e0e19e9b6d0dcc8c3a2a7ac510|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|1|1|V|
	3
	5 4
	6 3 4 2 1
	4 2
	1 -4 0 -2
	5 1
	1 2 3 4 5
81d987cc8bd40a05241794c77aaf8f5e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|636|3|V|cpp
	  pi curr = {0,-1};
a611fd24dfffadfc19b81c766ca8bb0e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|2|1|V|
	5 4
	6 3 4 2 1
	4 2
	1 -4 0 -2
	5 1
	1 2 3 4 5
e0d8cf145017ae77e0be0b7292ec9939|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|636|1|V|cpp
	
	  vp b;
	  int K = 0, prev = a[0];
	  FOR(i, 0, n - 1) {
	    if (a[i] > a[i + 1]) {
	      b.pb({prev, a[i]});
	      prev = a[i + 1];
	      K++;
	    }
	  }
	
	  out(K);
	
	  if (K >= k) {
	    goto a;
	  }
12cba3ee81cf4a793796a51b6327c678|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|635|12|v|cpp
	copy
33f09e9778a1245de070109cdb3fbb04|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|637|3|V|cpp
	  sort()
1552c2a69822ce133ab469a747a7a0fc|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|640|5|V|cpp
	    if (b[i] == a[i]) {
ea5a1cbe764918679997181a3ea281d3|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|641|5|V|cpp
	    }
be32861f7c9020de9b509fdbd99eb382|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|639|5|V|cpp
	    int x = 0;
9df22f196a33acd0b372fe502de51211|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|635|3|v|cpp
	auto
99aed07678f32119596b7dee1f36206a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|642|1|V|cpp
	
	  j
eabbb0222358345cb6b31cdf56c5c961|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|648|3|V|cpp
	  out(x);
180a1fd0fb92e24011075f4485beb9e4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|2|3|V|
	5 4
	6 3 4 2 1
	4 2
	1 -4 0 -2
	5 1
	1 2 3 4 5
	5 2
	1 3 5 2 4
c7cab40575826be2d11c65614ca65692|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|620|7|v|cpp
	INPUTS
18496e8e4e0a6d42578d50bad4d8e589|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/b.cpp|644|3|V|cpp
	  /* out(x, k); */
27bc78023fed8622a2da658e68b769d6|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|1|1|V|
	1
	2 1
	1 2
97d4976549c2f71a56d68437ccec2707|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|3|1|V|
	1 4 3 2
b41254d2b92cbfcf819b0fb9fc4b3e27|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|3|1|V|
	1 4 2 3
caf9fc135ea2055e114e382222e49582|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|5|1|V|
	1 3 2 4
7ca26c5aadcc1f3a423241ff4a8c2673|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|6|1|V|
	1 3 4 2
85e445019f1d8b61ea95bd6e75a063be|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|5|1|V|
	1 3 2 4
	1 3 4 2
5c21267fe83257f7a59a9b0407fd60b2|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q2/main.in|3|1|V|
	1 2 3 4
	1 2 4 3
	1 3 2 4
	1 3 4 2
	1 4 2 3
	1 4 3 2
bf8b8d7abfcd748a681e207a4e650a63|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|620|3|V|cpp
	  ROF() 
debe07cd9025ee86ac317f3f146e17b5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|620|3|V|cpp
	  ROF(i, n, 0) 
e4871e600e5ea6d53df9e42ecceabaf1|file:///Users/om/.config/coc/ultisnips/cpp/loops.snippets|11|12|v|snippets
	A loop that repeats n times without an index
76ac8153840b3082b96053154b6b3d22|file:///Users/om/.config/coc/ultisnips/cpp/loops.snippets|14|1|V|snippets
	
	snippet rep "A loop that repeats n times without an index"
	FOR($1) $0
	endsnippet
64e3cfce0b56548d5cb52898e577d220|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|620|3|V|cpp
	  FOR() 
68934a3e9455fa72420237eb05902327|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|619|30|v|cpp
	false
0cf31b2c283ce3431794586df7b0996d|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|622|4|V|cpp
	    
f75c49494418f00c521b5564a6272b29|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|634|5|v|cpp
	FOR(i, 0, n/2) 
bb006980d9141c2980ef9d6826e90a35|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|635|9|v|cpp
	ans + 1
d1fa0615db272e027ef923a0af60d2fe|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|635|9|v|cpp
	pow()
e04db183aeeda75a022899f990bc0f93|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|628|1|V|cpp
	tcT chos
2d3b191072de9e1f281a6f1927cae63d|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|648|7|V|cpp
	      ans += exp(n/2, i) * exp(2, (k - i) * n);
ad5b31768d76b6031db3149c48565524|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|642|1|V|cpp
	    for (int i = 0; i < n; i += 2) ans += choose(n, i);
ea6715d5241eb64312848946af5cb5a9|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|648|5|V|cpp
	      FOR(l, 0, n) 
d1d62d59f0f27a0e3aac9bf7417aac73|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|650|7|V|cpp
	      pow()
eb340815708dd79bf39a3efa6d3b34e5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|3|1|V|cpp
	// Uncomment for integer overflow
	/* #define int ll */
	
5f7a00613bfaea09e84d74f6aa67b1a1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|527|1|V|cpp
	tcT T max(T a) { rtn a[maxi(a)]; }
82146eca40f036e870b984baeb703756|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|528|1|V|cpp
	tcT T max(A<T,S> a) { rtn a[maxi(a)]; }
abc3e9de671a3457ebf13a8eebe90cc8|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|528|27|v|cpp
	maxi(a)
3adbd46af728dc84149c3ed30721ef5e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|527|1|V|cpp
	tcT T max(T a) { rtn a[maxi(a)]; }
	tcT T max(S<T> a) { rtn a.rbegin(); }
c747bc79e0c6ef42a63cf077f0d6a134|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|531|1|V|cpp
	tcT T min(S<T> a) { rtn a.rbegin(); }
598fc8733f461c617553197e6d98b42a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|528|1|V|cpp
	tcT T max(S<T> a) { rtn a.rbegin(); }
d6af6111b120b3b6d0edad7d1d3fc692|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|531|24|v|cpp
	maxi
1a3ce776d66dc5743dc43a898b2adee1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|529|14|v|cpp
	if () 
c8d07c75de9c82aaf9f893c4455ee400|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|529|3|V|cpp
	  each(a, x) if ( > ) 
47b7a4727d96151f2516c7f3bd56bbc0|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|526|1|V|cpp
	
	tcT T maxi(T a) {
	  int mi = 0;
	  FOR(i, sz(a)) if (a[i] > a[mi]) mi = i;
	  rtn mi;
	}
4fef45b0b419417da4bcefb5b9702051|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|527|1|V|cpp
	// ret
2e6daa7837b8d7e2d080dae8db7e469a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|528|3|V|cpp
	  int mi = 0;
c0907ace16b4a5e287c4ac9a8d9d2b4b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|530|23|v|cpp
	mi = i;
317e1abfae6d258779c66897823b2558|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|530|33|v|cpp
	, mi.pb();
83cdc226eb95d5998206a570442bcb66|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|529|3|V|cpp
	  mi.pb(0);
1f7c6fa8b208a3657aa57fdc589287cf|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|526|1|V|cpp
	
	tcT T amaxi(T a) {
	  v mi{0};
	  FOR(i, sz(a)) {
	    if (a[i] > a[mi[0]]) mi.clear(), mi.pb(i);
	    else if (a[i] == a[mi[0]]) mi.pb(i);
	  }
	  rtn mi;
	}
1ef5d302ae07079cb5b97825db76fe3b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|544|1|V|cpp
	
	tcT T amini(T a) {
	  int mi = 0;
	  FOR(i, sz(a)) if (a[i] < a[mi]) mi = i;
	  rtn mi;
	}
ec89a043916071267c8c4f0400356b6e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|545|1|V|cpp
	tcT T maxi(T a) { rtn amaxi(a)[0]; }
338bcc6f25b1e95d2166a06daaca7464|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcT T max(V<T> a) {
	  assert(sz(a) > 0);
	  T mx = -1;
	  each(a, x) mx = max(mx, x);
	  rtn mx;
	}
16ea9a3e31181d970edd12d286c1bff3|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcTS T max(A<T, S> a) {
	  assert(sz(a) > 0);
	  T mx = -1;
	  each(a, x) mx = max(mx, x);
	  rtn mx;
	}
110afdcafa12c0b0b4e03e35fcd69bb5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcT int maxi(V<T> a) {
	  assert(sz(a) > 0);
	  T mx = 0;
	  FOR(i, 1, sz(a)) if (a[i] > a[mx]) mx = i;
	  rtn mx;
	}
b25e71f9deefbd5f5f4e751d91ae43f6|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcTS int maxi(A<T, S> a) {
	  assert(sz(a) > 0);
	  T mx = 0;
	  FOR(i, 1, sz(a)) if (a[i] > a[mx]) mx = i;
	  rtn mx;
	}
89776d52b812ddacf3039ad8209a049c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcT T min(V<T> a) {
	  assert(sz(a) > 0);
	  T mn = a[0];
	  FOR(i, 1, sz(a)) mn = min(mn, a[i]);
	  rtn mn;
	}
7eab10964e83ea20fdfa70229da666a9|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcTS T min(A<T, S> a) {
	  assert(sz(a) > 0);
	  T mn = a[0];
	  FOR(i, 1, sz(a)) mn = min(mn, a[i]);
	  rtn mn;
	}
98899dbf4888a11a87dc0c26620fd265|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcT int mini(V<T> a) {
	  assert(sz(a) > 0);
	  T mn = 0;
	  FOR(i, 1, sz(a)) if (a[i] > a[mn]) mn = i;
	  rtn mn;
	}
2ca2bfbddea42bada7439a013fc1585a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|555|1|V|cpp
	
	tcTS int mini(A<T, S> a) {
	  assert(sz(a) > 0);
	  T mn = 0;
	  FOR(i, 1, sz(a)) if (a[i] > a[mn]) mn = i;
	  rtn mn;
	}
a9c5a50a184d647faa9009ce50c23c82|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|460|1|V|cpp
	
	// Sum {{{
	
	// get the sum of values (plain integers, vectors, arrays, etc.)
	
	tcT int sum(T a);
	tcTUU int sum(T a, U... b);
	tcT int sum(V<T> a);
	tcTS int sum(A<T, S> a);
	tcT int sum(S<T> a);
	tcT int sum(MS<T> a);
	tcTU int sum(M<T, U> a);
	
	tcT int sum(T a) { rtn mod(a); }
	
	tcTUU int sum(T a, U... b) { rtn mod(sum(a) + sum(b...)); }
	
	tcT int sum(V<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTS int sum(A<T, S> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcT int sum(S<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcT int sum(MS<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTU int sum(M<T, U> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x.s));
	  rtn res;
	}
	
	// }}}
	
1c1b8720ce970720a4165ca8f8023a69|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|462|19|v|cpp
	value(s)
3c6575a55946d66573d237ceffd5e39b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|462|27|v|cpp
	plain 
ca08ea8410f117e4edce3adab2fd5429|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|378|3|V|cpp
	  if () 
143371f99e975fb96629a9e035575d1a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|379|5|V|cpp
	    a *+=
a8693c7854f1323bc7102eb15a71cb0f|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|105|1|V|cpp
	#define FOR3(i, a, b) for (int i = (a); i < (b); i++)
a489752ad53c10fa9f456269b226e810|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|106|23|v|cpp
	for (int i = (a); i < (b); i++)
71d2742123aa127c1f8347802e4f58f5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|105|1|V|cpp
	#define FOR4(i, a, b, c) for (int i = (a); i < (b); i += (c))
fb531f5bd5215edfa1058b00eaddc770|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|110|1|V|cpp
	#define ROF3(i, b, a) for (int i = (b)-1; i >= (a); i--)
72f7f02c1d7b622c0b3a3029c3ef5d02|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|111|23|v|cpp
	for (int i = (b)-1; i >= (a); i--)
d4aaf2954fb3d21a1d32e7194c49495a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|642|1|v|cpp
	    for (int i = 0; i < n; i += 2)
b514ff8d710c1d5b1a4e2d003a263d30|file:///Users/om/.config/coc/ultisnips/cpp/loops.snippets|6|1|V|snippets
	
	snippet for "An empty for loop"
	FOR($1) $0
	endsnippet
b6ca631db940b9eed6a033cb59d1cca2|file:///Users/om/.config/coc/ultisnips/cpp/loops.snippets|10|1|V|snippets
	
	snippet fors "An empty for loop"
	FOR($1) $0
	endsnippet
bd044bc0febadbe3c3293ed6f4f6ccfa|file:///Users/om/.config/coc/ultisnips/cpp/loops.snippets|2|1|V|snippets
	
	snippet f "A for loop"
	FOR(i, 0, n) $0
	endsnippet
b31e9a9e4ed95164b4f5ff351968be27|file:///Users/om/.config/coc/ultisnips/cpp/loops.snippets|14|1|V|snippets
	
	snippet r "A reverse for loop"
	ROF(i, n, 0) $0
	endsnippet
c873968c7d6f8016e6ec095544061094|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Round%20%23737/Q3/c.cpp|649|7|v|cpp
	for (int i = 0; i < n; i += 2) 
94df2a6972ca1fa79411645fe9b42339|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|382|4|v|cpp
	Utility
93e39a5f1a53e0713c111a58554d7641|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|383|1|V|cpp
	
	// exponent function
	tcT T exp(T a, T b, bool m = true) {
	  T res = 1;
	  FOR(b) {
	    res *= a;
	    if (m) res %= m;
	  }
	  rtn res;
	}
49373ad5b4e923df1d3bca1e8458b6bf|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|391|1|V|cpp
	
	// prime factorize an integer
	tcT M<T, T> pfac(T a) {
	  M<T, T> ans;
	  T n = a;
	  for (int i = 2; i * i <= a; i++) {
	    while (n % i == 0) {
	      n /= i;
	      ans[i]++;
	    }
	  }
	  if (n > 1) ans[n]++;
	  rtn ans;
	}
74d87c77a12ef2a4a8e7cbbaa5ef90af|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|377|1|V|cpp
	
	tcT T fact() {  }
86ee2ba55aa03b06900298d3c1884440|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|378|1|V|cpp
	int 
01e75eceda2d7ffaf01bb73fe2ab52dd|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|378|1|V|cpp
	int fact[]
a1c3aea0be962a0a12a0def6960625a5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|136|15|v|cpp
	 = 0
3aee0c998b78ba8be7845eed50f90a8a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|136|1|V|cpp
	const int MAXN;
b3947656415ea54f8493d730a06b9c63|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|378|1|V|cpp
	vi fact(MAXN);
652114246f3ac3f33a5e7e9fbe0e864c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|387|3|V|cpp
	  fact
8f41bca236ab7a4bbd3ef5aaf08577f4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|379|3|v|cpp
	V<ll>
da5849cf41fc8e2b1bd5852d62c3aa0f|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|379|11|v|cpp
	MAXN
b0da275520918e23dd615e2a747528f1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|380|8|v|cpp
	build
394e975fedd742c36db7272d25b2691e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|382|15|v|cpp
	fact[i] = (curr *= i);
3abcd4054f4f1192e6985f4baae6a84f|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|383|7|V|cpp
	      fact[i] = (curr *= )
b20c6f69032f9fbc1a4737c056ccdf90|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|385|9|V|cpp
	        kjk
19912f3e448189b168b68e4d837513d4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|392|24|v|cpp
	a % MOD
4c6521f3dc2e05898bdbf88fc6af8aa1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|397|29|v|cpp
	 % MOD
230a091930a82c5ae47e29610ee98ceb|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|431|1|V|cpp
	
	    
e5d8f221cef68451a9636e1d6a95cd38|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|404|10|v|cpp
	[MAXN]
8d7233737efe32fc1e3de6454d748055|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|405|3|V|cpp
	  ll inv;
4b27c4ba46cc03055886aeeae6c212e4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|404|1|V|cpp
	  ll fact;
59b5623cf4e89cf228d89a834afdf577|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|404|3|V|cpp
	  int 
cbc0495164bccafa63526f6a814aaa27|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|408|5|V|cpp
	    fact[0] = 1;
282f30bfda397a4e4f9fa5caa7f9b505|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|408|1|V|cpp
	    fact.assign(n, 1),
b82c91e2103d0a495c099f0a12f66363|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|409|5|v|cpp
	fact
ae253e036622a66c08e1225e6ffe1bfa|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|409|5|V|cpp
	    inv[0] = 1;
7729abb21ad30556e270c4a5c7734c48|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|409|5|V|cpp
	    for (int i = 1; i < n; i++) {
9ac9c3f5546e207488802e0613aad781|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|417|21|v|cpp
	a % MOD;
fd91271771b1a190391849a5886b4cf6|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|393|1|V|cpp
	
	  ll binexp(ll a, ll b) {
	    if (b == 0) rtn 1ll;
	    if (b == 1) rtn(m ? mod(a) : a);
	    if (b % 2) rtn(m ? mod(a * binexp(a, b - 1)) : a * binexp(a, b - 1));
	    rtn binexp(m ? mod(a * a) : a * a, b / 2);
	  }
	}
3532b33fa6a264b41a4c8c6df960e5c5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|382|1|V|cpp
	
	  void Comb(T _n, bool _m = true) : n(_n), m(_m) {
	    fact.assign(n, 1);
	    ll curr = 1;
	    FOR(i, 1, n) {
	      curr *= i;
	      if (m) curr %= MOD;
	      fact[i] = curr;
	      inv[i] = binexp(fact[i], MOD - 2);
	    }
	  }
9f0f89f2d95d084d8488596dfdec7f98|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|377|1|V|cpp
	
	tcT struct Comb {
	  T n;
	  bool m;
	  vl fact;
c62921f41abdaea479e428129f436f89|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|406|1|V|cpp
	tcT ll
1d1de24c8c482d89759ef8e54d5e48f2|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|404|1|V|cpp
	
	// factorial function
	fact(T n, bool m = true) {
	  ll res = 1;
	  FOR(i, n) {
	    res *= n;
	    if (m) res %= MOD;
	  }
	  rtn res;
	}
cb89593d1f9fe3ecdb2178215eee80ae|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|415|4|v|cpp
	factorial
2f10f65768e2849230ef8d96ef0e2950|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|417|9|V|cpp
	  ll res = 1;
	  FOR(i, n) {
	    res *= n;
	    if (m) res %= MOD;
	  }
	  rtn res;
00331b8602ba65e7240208db292a9a35|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|417|3|V|cpp
	  rtn fact();
1b2d55ea69c95dda803de06d00db8775|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|414|1|V|cpp
	
	// choose function
	ll choose(T r, T k, bool m = true) {
	  ll res = 
	}
81aaa0ecbfff46feb2159868ed037dd1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/main.in|1|1|V|
	3
	11
	31
	75
3f38386e7353e66e751a4843a86c9a8e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|689|3|V|cpp
	  if (min()) 
327ecdadc736ac6c00e9276b79979a44|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|689|3|V|cpp
	  a = y, b = 
f77aba003509367dc6e55befdc4ff7db|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|689|3|V|cpp
	  A = 
35ada7322ab2945126224a5ded15e9ce|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|689|1|V|cpp
	  Y = y, B = y + 1, R = y + 2;
921b99acc3d1267654be1c41054e38a0|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|690|18|v|cpp
	y + 1
1ef4de2262ab307af52206c10552741a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|690|25|v|cpp
	y + 2
3d5767f74e4d1946844a4ec4d3981e3b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|690|1|V|cpp
	  Y = b - 1, B = b, R = b + 1;
2117c36a7d4ffb499a7711f2f728394a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|691|29|v|cpp
	b + 1
f2e3feb9955a804631e268a8e0b62689|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|690|1|V|cpp
	  if (Y <= y && B <= b && R <= r) ans = max(ans, Y + B+R);
34a57fa375013352939fdcb1cf606048|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1091A.cpp|383|3|v|cpp
	void 
e93acb146e114b5dfa6ce2d12dcb96e4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|442|10|v|cpp
	Functions
ccdd1bcbcb1d29793d2200a4e0e27960|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/main.in|1|1|V|
	8 13 9
050f4fbc94ede81f5a0f45f8fa64fc37|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/main.in|1|1|V|
	Replacing Elements
b48189d267a2b5ea8e9df094bedc4782|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1473A.cpp|737|3|V|cpp
	  FOR(i, 0, n)
d01469405f2859135f03ec65ce93d0bd|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1473A.cpp|737|3|V|cpp
	  a[0]
7c777293365222dc39809c186a272ef7|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1473A.cpp|449|1|V|cpp
	
	// seg tree data type
	tcT struct ST {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n, ID = 0;
	  V<T> seg;
	
	  ST(V<T> a) { init(a); }
	  ST(V<T> a, T _ID) : ID(_ID) { init(a); }
	  ST(V<T> a, F _comb) : comb(_comb) { init(a); }
	  ST(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = sz(a);
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
	
8eed5a24d0c880defd4fe099832c21d0|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CodeForces/Random%20Problems/1473A.cpp|444|1|V|cpp
	// Seg Tree {{{
	
	// seg tree data type
	tcT struct ST {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n, ID = 0;
	  V<T> seg;
	
	  ST(V<T> a) { init(a); }
	  ST(V<T> a, T _ID) : ID(_ID) { init(a); }
	  ST(V<T> a, F _comb) : comb(_comb) { init(a); }
	  ST(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = sz(a);
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
	
	// }}}
	
05924302054261823aa7d47fb524792e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|702|5|v|cpp
	uery
e37f0136aa3ffaf149b351f6a4c948e9|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|700|8|v|cpp
	init
bf7ff6ff086b26da70386619a34ccbb0|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|700|7|v|cpp
	 Seg
3a7e0091527a9fe56df912d178657798|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|700|7|v|cpp
	int _n
83d7aa817fc8a57d775157584ed21c8c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|696|16|v|cpp
	1e18
be7acf9150b397faa67be53225cf682f|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|697|28|v|cpp
	 min(a, b)
b2c1bc79e7de79d51a475e32656293aa|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|702|1|V|cpp
	    each(a, x) seg.pb(x);
24e16103ad7e562396981bf5827b6687|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|704|5|V|cpp
	    seg.assign(2 * n, ID);
9da4b5207aff9c24cb3e33a25ae536da|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|702|5|V|cpp
	    each(a, x) seg.pb(0);
d826c3b9871d1ae7a262710a5c41ab48|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|702|5|V|cpp
	    FOR(i, n) {  }
1927a74dc4c3b6cf44bd7483c29214ca|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|702|5|V|cpp
	    FOR() 
614e111f7f35ca8316830c748bed467d|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|703|25|v|cpp
	, pu
d321504c1b7af6ef3864fd5d38835683|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|703|25|v|cpp
	ll()
9d80840a410019ba536fc8c15222be9b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.in|1|1|V|
	8 4
	3 2 4 5 1 1 5 3
	2 1 4
	2 5 6
	1 2 3
	2 1 4
01a368f61e1e127f522bef06a2e3e155|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|704|13|V|cpp
	    out(seg);
	    ROF(i, n, 1) pull(i);
dfaed00f61c97467a180524edcdf6708|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|702|15|v|cpp
	seg.pb(0);
49b79f497c7828d4b843178a355e64c0|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|703|18|v|cpp
	 + 1
f69fdffb82267fca1be8c6913635b318|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|703|15|v|cpp
	n - 1
63be4ea2d87f2da23fdafe1a60c87b99|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|703|5|V|cpp
	    FOR(i, 1, sz(a) + 1) u(i, a[i - 1]);
15754aa59c153f650f392de5a28d29bc|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|700|7|v|cpp
	V<T> a
45c928ce1fe487c70e6b344e35c7b4ea|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|711|1|V|cpp
	
	template <class T> struct Seg { // comb(ID,b) = b
	  const T ID = 0;
	  T comb(T a, T b) { return a + b; }
	  int n;
	  vector<T> seg;
	  Seg(int ) {
	    n = sz(a) + 1;
	    seg.assign(2 * n, ID);
	  }
	  void pull(int p) { seg[p] = comb(seg[2 * p], seg[2 * p + 1]); }
	  void u(int p, T val) { // set val at position p
	    seg[p += n] = val;
	    for (p /= 2; p; p /= 2) pull(p);
	  }
	  T q(int l, int r) { // min on interval [l, r]
	    T ra = ID, rb = ID;
	    for (l += n, r += n + 1; l < r; l /= 2, r /= 2) {
	      if (l & 1) ra = comb(ra, seg[l++]);
	      if (r & 1) rb = comb(seg[--r], rb);
	    }
	    return comb(ra, rb);
	  }
	};
d3626a2599e7960638c67fc8b049984b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|721|9|V|cpp
	  V<int> a(n);
	  in(a);
3b4937704b893b108b8f7c9f7739d0f4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|723|3|V|cpp
	  ST b;
b11cf00dcdf69d58076c676f6a31a430|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|743|20|v|cpp
	 - 1
e93d98574bdf59038e4e02d438941f9b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|703|18|v|cpp
	seg.u
3ddf1d38e4810f976d3c0248ebfc13d2|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|735|10|v|cpp
	a(n)
2752a670729db9a0b2b763d94618074e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|740|1|V|cpp
	  FOR(i, 1, n + 1) {
	    int a;
	    in(a);
	    b.upd(i - 1, a);
	  }
3e56bb3d561eccb8ac4468b64423745c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|739|1|V|cpp
	  b.init(n + 1);
0703fd7bef7575e22a0884b4479e2dee|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|737|6|v|cpp
	<ll>
1b1cc7f086b3f074da452bc3129981eb|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|715|5|v|cpp
	query
933dd8674c563081260867dfa95b5e74|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|491|3|v|cpp
	each
5b328cabedca4f5cc0c835515c82738c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|465|1|V|cpp
	#define tcTUVV template<class T, class U, class... V>
6129b5fa63365731da59ad79bb8e8c2a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|502|3|v|cpp
	iUnt
a7691af96de5caf64579885c5b53482b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|461|1|V|cpp
	// Sum {{{
	
	// get the sum of values (plain integers, vectors, arrays, etc.)
	
	#define tcTUV template <class T, class U, class V>
	#define tcTUVV template <class T, class U, class... V>
	
	tcTU U sum(T a);
	tcTUVV U sum(T a, V... b);
	tcTUV V sum(P<T, U> a);
	tcTU U sum(V<T> a);
	tcTUS U sum(A<T, S> a);
	tcTU U sum(S<T> a);
	tcTU U sum(MS<T> a);
	tcTUV V sum(M<T, U> a);
	
	tcTU U sum(T a) { rtn mod(a); }
	
	tcTUVV U sum(T a, V... b) { rtn mod(sum(a) + sum(b...)); }
	
	tcTUV V sum(P<T, U> a) { rtn mod(sum(a.f) + sum(a.s)); }
	
	tcTU U sum(V<T> a) {
	  U res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTUS U sum(A<T, S> a) {
	  U res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTU U sum(S<T> a) {
	  U res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTU U sum(MS<T> a) {
	  U res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTUV V sum(M<T, U> a) {
	  V res = 0;
	  each(a, x) res = mod(res + sum(x.s));
	  rtn res;
	}
	
06e5a88cfccf302a17cc2ac9eb7b0289|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|464|10|V|cpp
	tcT T sum() {  }
	
3cf1612a33ec43bd159e5bf5b62b4e5e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|464|1|V|cpp
	#define tcTUV template <class T, class U, class V>
	#define tcTUVV template <class T, class U, class... V>
489f8ed9e7a8d8098b35e5348d83d50e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|473|21|v|cpp
	 mod
c81abc3e49488bf2282a7b41e2a16d63|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|475|44|v|cpp
	 rtn mod(sum(a) + sum(b...)); 
df2559b62e8c264ec6f9ee23c3d9f0bb|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|473|38|v|cpp
	mod(a)
870268db1c6f928737ba7851d7cdc6f0|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|479|1|V|cpp
	
	tcTU T sum(P<T, U> a) { rtn mod(sum(a.f) + sum(a.s)); }
152ea584084f1f00535d0841492fdf0c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|511|3|V|cpp
	  PQU<>
9ad039781d6664402f9096d16c59fb01|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|514|3|V|cpp
	  } 
95fbc61bedbad98b6a3c57f7ea36e8ca|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|511|11|v|cpp
	 copy
38968ff31be91518342286507f69b739|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|513|23|v|cpp
	 sumw
b01d6a2b00b2d4f53df97e3fbb4df127|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|506|18|v|cpp
	= mod(res + 
740db5a36144a1110c9808c4dcc9124e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|506|14|v|cpp
	res += x.s;
0aba0e811d015d2acc56f7966f6ba82c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|509|1|V|cpp
	    res += x;
	    if (m) res %= x;
5a98432f9bd1bbe0db538991d957e556|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|503|3|V|cpp
	  }res = mod(res + sum(x));
9ada78a6dae4e2de9b5b0e0ff81ad4c1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|500|1|V|cpp
	  each(a, x) {
	    res += x;
	    if (m) res %= MOD;
	  }
00930ad9c8e1759669401896447f0773|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|494|3|V|cpp
	  each(a, x) { res = mod(res + sum(x)); }
1bef08914b1f47318de3cb07b8f90bf1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|488|3|V|cpp
	  each(a, x) res = mod(res + sum(x));
e125f81954fdfc2302904186bacf0ea1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|464|8|V|cpp
	tcTU U sum(T a);
	tcTUVV U sum(T a, V... b);
	tcTUV V sum(P<T, U> a);
	tcTU U sum(V<T> a);
	tcTUS U sum(A<T, S> a);
	tcTU U sum(S<T> a);
	tcTU U sum(MS<T> a);
	tcTUV V sum(M<T, U> a);
	
1f59dd3dfaaba2e3dda445d973c72137|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|466|24|v|cpp
	, bool m = false
405ffd4cd02cd3aad2183112aed52f4b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|470|3|V|cpp
	  bool m = false;
d30b273b679e585a6247b44fad2a6db1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|469|1|V|cpp
	tcTUU T sum(T a, U... b, bool m) {
	  T res = sum(a) + sum(b...);
	  if (m) res %= MOD;
	  rtn res;
	}
d906f76911a1df1e8a665ccb875db312|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|474|24|v|cpp
	, bool m
bed4bc7144d744d6df9402bda76f4dc7|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|465|1|V|cpp
	tcT T sum(T a) {
	  bool m = false;
	  rtn(m ? mod(a) : a);
	}
6b4d90f903adc479399c92f7f4e8abdf|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|467|22|V|cpp
	  rtn(m ? mod(a) : a);
	}
f6b04a90b8ef13a066dc7bd104e8ecf6|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|465|1|V|cpp
	tcT T sum(T a) {
	  bool m = false;
82d86fd798d1f18c0fad48388058acc5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|469|6|v|cpp
	(m ? mod(a) : a);
94daaa46c0d8bd37d014df5b221906da|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|477|20|V|cpp
	  T res = sum(a) + sum(b...);
	  if (m) res %= MOD;
	  rtn res;
3fd29c42ea36137b7c53a13250f1f69c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|473|44|v|cpp
	 false
63c094c00dd976e117ed9a5e896e29d8|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|468|19|v|cpp
	 = false
d7e83e47e55201fc29bd5464e23f929b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|466|34|v|cpp
	, false
c46a139c6becd3ee1923329e20c7a572|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|465|11|v|cpp
	bool m, 
316c9a9b86b731b040832efe9eee812e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|468|13|v|cpp
	bool m
e297546462b1fad2a07bf85fa485233c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|717|1|V|cpp
	
	template <class T> struct Seg { // comb(ID,b) = b
	  const T ID = 0;
	  T comb(T a, T b) { return a + b; }
	  int n;
	  vector<T> seg;
	  Seg(V<T> a) {
	    n = sz(a) + 1;
	    seg.assign(2 * n, ID);
	    FOR(i, 0, sz(a)) u(i, a[i]);
	  }
	  void init(int _n) {
	    n = _n;
	    seg.assign(2 * n, ID);
	  }
	  void pull(int p) { seg[p] = comb(seg[2 * p], seg[2 * p + 1]); }
	  void u(int p, T val) { // set val at position p
	    p++;
	    seg[p += n] = val;
	    for (p /= 2; p; p /= 2) pull(p);
	  }
	  T q(int l, int r) { // sum on interval [l, r]
	    l++;
	    T ra = ID, rb = ID;
	    for (l += n, r += n + 1; l < r; l /= 2, r /= 2) {
	      if (l & 1) ra = comb(ra, seg[l++]);
	      if (r & 1) rb = comb(seg[--r], rb);
	    }
	    return comb(ra, rb);
	  }
	};
7774695f8994cf7f995c756e39aff0de|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|723|10|V|cpp
	    n = _n;
	    seg.assign(2 * n, ID);
9597acdc7317a912a9fa3369bec6ad7c|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|724|21|v|cpp
	 + 2
995b83369ffbc5f9101fec0cdaeac8b8|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|727|1|V|cpp
	    out(seg);
dcdec3496f769012d109a9f9bb951727|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|690|8|v|cpp
	 ceil
7b1a5a4dd8df61dc8e4ea38fa24f4490|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|690|8|v|cpp
	log2
e488d9e3475ea5008007f43adb156b59|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|691|5|V|cpp
	    n = pow(2, n);
98ff67e6d8c22fcfafe5743e4f4efc1a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|694|9|v|cpp
	i, 0, n
6ecc5e84dcc78e7c89245b82d0b3e716|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|690|9|V|cpp
	    n = pow(2, ceil(log2(sz(a))));
	    out(n);
300fc0f5a692b852877ed9d5fff57bba|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|696|5|V|cpp
	    /* out(seg); */
5bb6d79da6de606203be18bba0073173|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|691|3|V|cpp
	    /* out(n); */
6dcd11763628732d696e35277fad2eeb|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|718|1|V|cpp
	
	template <class T> struct Seg { // comb(ID,b) = b
	  const T ID = 0;
	  T comb(T a, T b) { return a + b; }
	  int n;
	  vector<T> seg;
	  Seg(V<T> a) {
	    n = sz(a);
	    seg.assign(2 * n + 2, ID);
	    FOR(i, 0, n) u(i, a[i]);
	    out(seg);
	  }
	  void pull(int p) { seg[p] = comb(seg[2 * p], seg[2 * p + 1]); }
	  void u(int p, T val) { // set val at position p
	    p++;
	    seg[p += n] = val;
	    for (p /= 2; p; p /= 2) pull(p);
	  }
	  T q(int l, int r) { // sum on interval [l, r]
	    l++;
	    T ra = ID, rb = ID;
	    for (l += n, r += n + 1; l < r; l /= 2, r /= 2) {
	      if (l & 1) ra = comb(ra, seg[l++]);
	      if (r & 1) rb = comb(seg[--r], rb);
	    }
	    return comb(ra, rb);
	  }
	};
a7cafc61e3402cfd6ce3581f2adaf06e|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|614|1|V|cpp
	min();
3388fbad3d3997542cda4941948aa7a5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.in|1|1|V|
	7 4
	3 2 4 5 1 1 5
	2 1 4
	2 5 6
	1 3 1
	2 1 4
df9e1aa4940f7a34263d65ef41b87cf1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|730|11|v|cpp
	 min
754a56a027d2484eb23495a7c7e2afe6|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.in|1|1|V|
	
	 wh
1d17e10dd16b67afff98baa82db9b98d|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|676|1|V|cpp
	
	tcT struct Seg {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n, ID = 0;
	  V<T> seg;
	
	  Seg(V<T> a) { init(a); }
	  Seg(V<T> a, T _ID) : ID(_ID) { init(a); }
	  Seg(V<T> a, F _comb) : comb(_comb) { init(a); }
	  Seg(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = pow(2, ceil(log2(sz(a))));
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    FOR(n - sz(a)) seg.pb(0);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
	
17d60674ceab4c9ce8731393c299efd5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|725|1|V|cpp
	  int n, q;
	  in(n, q);
	
	  V<ll> a(n);
	  in(a);
	  Seg b(a);
	
	  while (q--) {
	    int x, c, d;
	    in(x, c, d);
	
	    if (x == 1) {
	      b.u(c - 1, d);
	    } else {
	      out(b.q(c - 1, d));
	    }
	  }
a1d0ec6d56f8833a078b5a7ac4caf2d4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|1|33|v|cpp
	Minimum
ee149d705d028b5669aebe01cc60959a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|460|1|V|cpp
	
	// Sum {{{
	
	// get the sum of values (plain integers, vectors, arrays, etc.)
	
	tcT T sum(bool m, T a) { rtn(m ? mod(a) : a); }
	tcT T sum(T a) { rtn sum(false, a); }
	
	tcTUU T sum(bool m, T a, U... b) {
	  T res = sum(m, a) + sum(m, b...);
	  if (m) res %= MOD;
	  rtn res;
	}
	tcTUU T sum(T a, U... b) { rtn sum(false, a, b...); }
	
	tcT T sum(V<T> a, bool m = false) {
	  T res = 0;
	  each(a, x) {
	    res += x;
	    if (m) res %= MOD;
	  }
	  rtn res;
	}
	
	tcTS T sum(A<T, S> a, bool m = false) {
	  T res = 0;
	  each(a, x) {
	    res += x;
	    if (m) res %= MOD;
	  }
	  rtn res;
	}
	
	tcT T sum(S<T> a, bool m = false) {
	  T res = 0;
	  each(a, x) {
	    res += x;
	    if (m) res %= MOD;
	  }
	  rtn res;
	}
	
	tcT T sum(MS<T> a, bool m = false) {
	  T res = 0;
	  each(a, x) {
	    res += x;
	    if (m) res %= MOD;
	  }
	  rtn res;
	}
	
	tcTU U sum(M<T, U> a, bool m = false) {
	  U res = 0;
	  each(a, x) {
	    res += x.s;
	    if (m) res %= MOD;
	  }
	  rtn res;
	}
	
	tcTU T sum(PQU<T, U> a, bool m = false) {
	  auto b = copy(a);
	  T res = 0;
	  while (sz(b)) {
	    res += b.top(), b.pop();
	    if (m) res %= MOD;
	  }
	  rtn b;
	}
	
	// }}}
f78b8b6edbb1e1578a7a3fcadedc5417|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|626|1|V|cpp
	
	// Sum {{{
	
	// get the sum of things (integers, vectors, arrays, etc.)
	
	tcT int sum(T a);
	tcTUU int sum(T a, U... b);
	tcT int sum(V<T> a);
	tcTS int sum(A<T, S> a);
	tcT int sum(S<T> a);
	tcT int sum(MS<T> a);
	tcTU int sum(M<T, U> a);
	
	tcT int sum(T a) { rtn mod(a); }
	
	tcTUU int sum(T a, U... b) { rtn mod(sum(a) + sum(b...)); }
	
	tcT int sum(V<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTS int sum(A<T, S> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcT int sum(S<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcT int sum(MS<T> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x));
	  rtn res;
	}
	
	tcTU int sum(M<T, U> a) {
	  int res = 0;
	  each(a, x) res = mod(res + sum(x.s));
	  rtn res;
	}
	
	// }}}
89f62cddd9e807a618bd753f11674506|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|676|1|V|cpp
	
	tcT struct Seg {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n, ID = 0;
	  V<T> seg;
	
	  Seg(V<T> a) { init(a); }
	  Seg(V<T> a, T _ID) : ID(_ID) { init(a); }
	  Seg(V<T> a, F _comb) : comb(_comb) { init(a); }
	  Seg(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = pow(2, ceil(log2(sz(a))));
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    FOR(n - sz(a)) seg.pb(0);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
	
	bool TC() {
	  /* rtn true; // Uncomment this line for multiple test cases */
	  rtn false;
	}
	
	void solve(int32_t T) {
	  int n, q;
	  in(n, q);
	
	  V<ll> a(n);
	  in(a);
	  Seg b(a);
	
	  while (q--) {
	    int x, c, d;
	    in(x, c, d);
	
	    if (x == 1) {
	      b.u(c - 1, d);
	    } else {
	      out(b.q(c - 1, d));
	    }
	  }
	}
	
	/* stuff you should look for
	 * int overflow, array bounds
	 * special cases (n=1?)
	 * do smth instead of nothing and stay organized
	 * WRITE STUFF DOWN
	 * DON'T GET STUCK ON ONE APPROACH
	 */
f9ad108c3905848af050f1d6d2cc252a|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|755|1|V|cpp
	
	/* stuff you should look for
	 * int overflow, array bounds
	 * special cases (n=1?)
	 * do smth instead of nothing and stay organized
	 * WRITE STUFF DOWN
	 * DON'T GET STUCK ON ONE APPROACH
	 */
063498f936adf14cfd013b92865295fb|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|751|1|V|cpp
	
	void solve(int32_t T) {
7551ba8c314f9e244969b8765b703e78|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|746|1|V|cpp
	
	bool TC() {
	  /* rtn true; // Uncomment this line for multiple test cases */
	  rtn false;
	}
29f72f435580674a27dd0a4cbe1e992f|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|743|1|V|cpp
	
	// Uncomment for integer overflow
	/* #define int ll */
34ffede0039ac8fc8bf610d98beb8828|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|742|13|V|cpp
	// ––– CODE –––
	
57c577c7df4923024ce1f0d0950aaaaf|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|699|1|V|cpp
	tcTUU T min(T a, U... b) { rtn min(a, min(b...)); }
aa891c882cdc039b50148d81e87ea7fc|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|699|16|v|cpp
	, U... b
0d2d2501ca0ea87c3e336d727362945b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|699|24|v|cpp
	min(a, min(b...))
3db172154e76f86eb79b729bb4281803|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|756|17|v|cpp
	INT_MAX
8f5b3ea3237ff8dc64a483b51fad6bbe|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|716|5|V|cpp
	    out(ID);
4c5fceb0b8ba5d3e4be8801adfba86a0|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|702|1|V|cpp
	tcT struct Seg {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n;
	  T ID = 0;
	  V<T> seg;
	
	  Seg(V<T> a) { init(a); }
	  Seg(V<T> a, T _ID) : ID(_ID) { init(a); }
	  Seg(V<T> a, F _comb) : comb(_comb) { init(a); }
	  Seg(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = pow(2, ceil(log2(sz(a))));
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    FOR(n - sz(a)) seg.pb(0);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
1a2e123f0293511f5b5270247d7946e3|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|488|15|v|cpp
	{
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n, ID = 0;
	  V<T> seg;
	
	  ST(V<T> a) { init(a); }
	  ST(V<T> a, T _ID) : ID(_ID) { init(a); }
	  ST(V<T> a, F _comb) : comb(_comb) { init(a); }
	  ST(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = sz(a);
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	}
dc1ddac6451520bb9940297e0042a102|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|488|1|V|cpp
	tcT struct ST ;
476e24ad382dc099e342b23fa449dde4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|450|1|V|cpp
	
	// seg tree data type
	tcT struct Seg {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n;
	  T ID = 0;
	  V<T> seg;
	
	  Seg(V<T> a) { init(a); }
	  Seg(V<T> a, T _ID) : ID(_ID) { init(a); }
	  Seg(V<T> a, F _comb) : comb(_comb) { init(a); }
	  Seg(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = pow(2, ceil(log2(sz(a))));
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    FOR(n - sz(a)) seg.pb(0);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
	
e3da06753abde0af082fca8e7a36845b|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/Templates/std%20io/main.cpp|444|1|V|cpp
	
	// Seg Tree {{{
	
	// seg tree data type
	tcT struct Seg {
	  using F = T (*)(T, T);
	
	  F comb = sum;
	  int n;
	  T ID = 0;
	  V<T> seg;
	
	  Seg(V<T> a) { init(a); }
	  Seg(V<T> a, T _ID) : ID(_ID) { init(a); }
	  Seg(V<T> a, F _comb) : comb(_comb) { init(a); }
	  Seg(V<T> a, F _comb, T ID) : comb(_comb), ID(ID) { init(a); }
	
	  void init(V<T> a) {
	    n = pow(2, ceil(log2(sz(a))));
	    seg.assign(n, 0);
	    each(a, x) seg.pb(x);
	    FOR(n - sz(a)) seg.pb(0);
	    ROF(i, n, 1) calc(i);
	  }
	
	  void calc(int i) { seg[i] = comb(seg[2 * i], seg[2 * i + 1]); }
	
	  void u(int i, T val) {
	    assert(i >= 0), assert(i < n);
	    seg[i += n] = val;
	    for (i /= 2; i; i /= 2) calc(i);
	  }
	
	  T q(int L) { rtn q(L, L + 1); }
	  T q(int L, int R) { rtn q(L, R, 0, n, 1); }
	  T q(int L, int R, int l, int r, int i) {
	    assert(L >= 0), assert(L < n);
	    assert(R > 0), assert(R <= n);
	    if (l >= R || r <= L) rtn ID;
	    if (l >= L && r <= R) rtn seg[i];
	    T ans = ID;
	    ans = comb(ans, q(L, R, l, (l + r) / 2, 2 * i));
	    ans = comb(ans, q(L, R, (l + r) / 2, r, 2 * i + 1));
	    rtn ans;
	  }
	};
	
	// }}}
f87a7a16716eba675e81dbe4c08da159|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|698|1|V|cpp
	
	tcT T min(T a, T b) { rtn(a <= b ? a : b); }
	tcTUU T min(T a, U... b) { rtn min(a, min(b...)); }
08c955376ace3300601c7b62f47f32de|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|771|9|V|cpp
	  Seg a() {
	
	  }
c709e62cb76452888098c89f4a94c868|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|777|1|V|cpp
	    if (x == 1) b.u(a, b);
b5c55343fd0f7ccc5e44d08dd64affc1|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|778|5|v|cpp
	if (x == 1) 
ff1ef1408be78e4fce0f62b2ad1b5b64|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|781|7|v|cpp
	b.q(a, b);
a127fd1f86e4ab650f2216f09992afa4|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|781|6|V|cpp
	      
72ffe5ab515029dab95d1589b2d97344|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Sum%20Queries/main.cpp|684|1|V|cpp
	// seg tree data type
cf2140b30f84f65868d32dec23d17af1|file:///Users/om/.config/coc/ultisnips/cpp/basic.snippets|11|1|V|snippets
	
	snippet while "A while statement"
	while (${1:CONDITION}) $0
	endsnippet
1243c0ea0fd0e27e8c84cd4837bb5bab|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|771|5|V|cpp
	  while (q--) {
	
	  }
7b6ebeef7042c11acff3fbf49e98c634|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|771|9|v|cpp
	, [&](int a, int b) { ; 
02584cda0d87e4bbdd6dcb91f8d81de5|file:///Users/om/Google%20Drive/OmMahesh/Programming/Comp%20Prog/CSES/Dynamic%20Range%20Minimum%20Queries/main.cpp|771|11|v|cpp
	[&](int a
a386660baa537f74b3039a242d0386a9|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|26|1|V|snippets
	
	snippet seg "A seg tree" b
	ST b$1(a$2${3:, [&](${4:int} a, $4 b) { $5; }}${6:, ${7:ID}});
	endsnippet
1e05b11a9eecb5d1af6c7cfcc8b3cee5|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|28|12|v|snippets
	${3:, [&](${4:int} a, $4 b
ce516df52dbe2b049b5828371cb4e8c2|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|28|12|v|snippets
	) { $5; }}${6:, ${7:ID}}
b04c26159019ebc533fb3504b725089c|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|28|1|V|snippets
	Seg b$1(a$2, sum$3, 0$4);
416a44c489a98592fd7e419ac721e279|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|33|1|V|snippets
	ST b$1(a$2${3:, [&](${4:int} a, $4 b) { $5; }}${6:, ${7:ID}});
1ba97dc733f7e628b69ca4ffec40ca01|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|22|1|V|snippets
	
	snippet lambda "A lambda function"
	[&]($1) { $0 }
	endsnippet
62cee4f6615d45910cb610c1689c530b|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|4|1|V|snippets
	sort(${1:a}, $1 + n$2);
39b63355ba457980999d1c1b3580ff98|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|4|1|V|snippets
	sor(a$1);
a5518a41392bd44466e9f3e8e6a7bddc|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|2|1|V|snippets
	
	snippet sort "Sort an array or vector"
	sor(a$1);
	endsnippet
efe8b4d4b1728f273116ea625bc39b34|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|18|1|V|snippets
	
	snippet sortr "Sort an array in reverse"
	sort(${1:a}, $1 + n$2, greater<${3:int}>());
	endsnippet
743e601b0f2a84d355b24ca2d409570c|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|18|1|V|snippets
	
	snippet sr "Sort an array in reverse"
	sort(${1:a}, $1 + n$2, greater<${3:int}>());
	endsnippet
ba3faec7f7db97c2f935a73b1ef13d62|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|20|1|V|snippets
	sort(${1:a}, $1 + n$2, greater<${3:int}>());
6a5f99846ebbe44b9c81edc0aca98e8e|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|20|1|V|snippets
	rsor(a$1);
97c4350aff6339ef53f8b059013cf938|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|26|1|V|snippets
	
	snippet sortr "Sort an array in reverse"
	rsor(a$1);
	endsnippet
819f4d411b826566eee923125ed21921|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|31|9|v|snippets
	sortr
7aa2b00b983d895e8bf8e8dd09c6caaa|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|30|1|V|snippets
	
	snippet rs "Sort an array in reverse"
	rsor(a$1);
	endsnippet
7b10590bca0b64ee1bed9c88059a6292|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|30|1|V|snippets
	
	snippet rsor "Sort an array in reverse"
	rsor(a$1);
	endsnippet
4526ce756359eeb725a4baeaedc864bc|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|18|1|V|snippets
	
	snippet sr "Sort an array in reverse"
	rsor(a$1);
	endsnippet
fe7d3eee558d69b49a0ddcba1c93a6c1|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|46|1|V|snippets
	
	snippet sortv "Sort a vector"
	sort(${1:a}.begin(), $1.end());
	endsnippet
36f34bc206f0a3b39d588f1e34e62ba0|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|46|1|V|snippets
	
	snippet sortrv "Sort a vector in reverse"
	sort(${1:a}.rbegin(), $1.rend());
	endsnippet
f9d6e8dd9256d774bcee119eaaf19442|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|13|34|v|snippets
	 or vector
b104454adf7641d0983fc27d0e18b364|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|13|14|v|snippets
	Sort an array/vector
913c4b9ef49727cff32f8d4a0bd3ea66|file:///Users/om/.config/coc/ultisnips/cpp/other.snippets|9|33|v|snippets
	Sort an array or vector
