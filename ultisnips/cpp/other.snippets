# ––– OTHER –––

# Sort

snippet s "Sort an array/vector"
sor(a$1);
endsnippet

snippet so "Sort an array/vector"
sor(a$1);
endsnippet

snippet sor "Sort an array/vector"
sor(a$1);
endsnippet

snippet sort "Sort an array/vector"
sor(a$1);
endsnippet

# Reverse Sort

snippet rs "Sort an array/vector in reverse"
rsor(a$1);
endsnippet

snippet rso "Sort an array/vector in reverse"
rsor(a$1);
endsnippet

snippet rsor "Sort an array/vector in reverse"
rsor(a$1);
endsnippet

snippet rsort "Sort an array/vector in reverse"
rsor(a$1);
endsnippet

snippet sr "Sort an array/vector in reverse"
rsor(a$1);
endsnippet

snippet sortr "Sort an array/vector in reverse"
rsor(a$1);
endsnippet

snippet l "A lambda function"
[&]($1) { $0 }
endsnippet

snippet la "A lambda function"
[&]($1) { $0 }
endsnippet

snippet lam "A lambda function"
[&]($1) { $0 }
endsnippet

snippet lamb "A lambda function"
[&]($1) { $0 }
endsnippet

snippet lambd "A lambda function"
[&]($1) { $0 }
endsnippet

snippet lambda "A lambda function"
[&]($1) { $0 }
endsnippet

snippet seg "A seg tree" b
Seg b$1(a$2, sum$3, 0$4);
endsnippet

snippet Seg "A seg tree" b
Seg b$1(a$2, sum$3, 0$4);
endsnippet

snippet fold "A fold section" b
// $1 {{{

$0

// }}}
endsnippet

snippet yn "Output Yes/No using goto" b
out("Yes");
rtn;
a:
out("No");
endsnippet
